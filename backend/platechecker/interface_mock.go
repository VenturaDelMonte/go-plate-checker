// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package platechecker is a generated GoMock package.
package platechecker

import (
	models "github.com/VenturaDelMonte/go-plate-checker/backend/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPlateChecker is a mock of PlateChecker interface
type MockPlateChecker struct {
	ctrl     *gomock.Controller
	recorder *MockPlateCheckerMockRecorder
}

// MockPlateCheckerMockRecorder is the mock recorder for MockPlateChecker
type MockPlateCheckerMockRecorder struct {
	mock *MockPlateChecker
}

// NewMockPlateChecker creates a new mock instance
func NewMockPlateChecker(ctrl *gomock.Controller) *MockPlateChecker {
	mock := &MockPlateChecker{ctrl: ctrl}
	mock.recorder = &MockPlateCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPlateChecker) EXPECT() *MockPlateCheckerMockRecorder {
	return m.recorder
}

// PlateCheck mocks base method
func (m *MockPlateChecker) PlateCheck(arg0 models.Plate) error {
	ret := m.ctrl.Call(m, "PlateCheck", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PlateCheck indicates an expected call of PlateCheck
func (mr *MockPlateCheckerMockRecorder) PlateCheck(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PlateCheck", reflect.TypeOf((*MockPlateChecker)(nil).PlateCheck), arg0)
}
